a
pre_test <- rnorm(50, 40, 15)
pre_test <- rnorm(50, 40, 15)
post_pred <- rnorm(50, a+b*pre_test+theta*0, error)
set.seed(123)
pre_test <- rnorm(50, 40, 15)
post_pred <- rnorm(50, a+b*pre_test+theta*0, error)
set.seed(123)
pre_test <- rnorm(50, 40, 15)
post_pred <- rnorm(50, a+b*pre_test+theta*0, error)
mean(post_pred)
sd(post_pred)
set.seed(123)
pre_test <- rnorm(50, 40, 15)
post_pred <- rnorm(50, a+b*pre_test+theta*0, error)
mean(post_pred)
sd(post_pred)
set.seed(123)
pre_test <- rnorm(50, 40, 15)
post_pred_0 <- rnorm(50, a+b*pre_test+theta*0, error)
mean(post_pred)
sd(post_pred)
sd(post_pred_0)
set.seed(123)
pre_test <- rnorm(50, 40, 15)
post_pred_0 <- rnorm(50, a+b*pre_test+theta*0, error)
mean(post_pred_0)
sd(post_pred)
set.seed(123)
pre_test <- rnorm(50, 40, 15)
post_pred_0 <- rnorm(50, a+b*pre_test+theta*0, error)
mean(post_pred_0)
sd(post_pred_0)
post_pred_1 <- rnorm(50, a+b*pre_test+theta*1, error)
mean(post_pred_1)
sd(post_pred_1)
n_pop <- sample(18:99, 82)
n_pop
n_pop <- sample(18:99, 82)
fit <- stan_glm(y ~ z + n_pop + z:n_pop, family = binomial(link = "logit"), data = data)
set.seed(123)
pre_test <- rnorm(100, 40, 15)
post_pred_0 <- rnorm(100, a+b*pre_test+theta*0, error)
mean(post_pred_0)
sd(post_pred_0)
post_pred_1 <- rnorm(100, a+b*pre_test+theta*1, error)
mean(post_pred_1)
sd(post_pred_1)
post_pred_1 <- rnorm(100, a+b*pre_test+theta*1, error)
mean(post_pred_1)
sd(post_pred_1)
length(n_pop)
library("devtools")
#install.packages("roxygen2")
library(roxygen2)
library("devtools")
library(roxygen2)
setwd("/Volumes/GoogleDrive/My Drive/QMSS/Spring 2022/GR5072_Modern Data Structure/gr5072-homework-5-DuYanji/src")
#set the directory same source as the source file
#setwd("/Volumes/GoogleDrive/My Drive/QMSS/Spring 2022/GR5072_Modern Data Structure/gr5072-homework-5-DuYanji/src")
create_package("functions") # create the package
data<-read.csv("Seasons_Stats_NBA")
data<-read.csv("Seasons_Stats_NBA.csv")
data<-read.csv("Seasons_Stats_NBA.csv")
data<-tibble(data)
library("devtools")
library(roxygen2)
library(purrr)
library(tidyverse)
data<-read.csv("Seasons_Stats_NBA.csv")
head(data)
function_1 <- function(x){
output <- vector("double",max(Age))
}
archive(url)
library(archive)
url <- "http://www.bls.gov/cex/pumd/data/comma/diary14.zip"
# get a complete list of all files contained in the zip file
archive(url)
zip_file_name <- "diary14.zip"
curl_download(url, zip_file_name)
library (gdata)
library(readxl)
library(curl)
# the url for the online Excel file
url <- "http://www.huduser.org/portal/datasets/fmr/fmr2015f/FY2015F_4050_Final.xls"
# use read.xls to import
rents <- read.xls (url)     # using gdata
destfile <- "FY2015F_4050_Final.xls"
curl_download(url, destfile)
rents <- read_excel(destfile)
excel_sheets(curl::curl_download(url, destfile))
library(archive)
archive(url)
zip_file_name <- "diary14.zip"
curl_download(url, zip_file_name)
# where did the file go?
archive_extract(diary_14, file = 3)  # thrid file
archive_extract(diary_14, file = "diary14/dtbd144.csv") # fourth file by name
archive_extract(diary_14) # all files
archive_extract(diary_14, file = 3)  # thrid file
archive_extract(diary_14, file = "diary14/dtbd144.csv") # fourth file by name
archive_extract(diary_14) # all files
library (rvest)
page <- read_html("https://en.wikipedia.org/wiki/Web_scraping")
page <- read_html("https://en.wikipedia.org/wiki/Web_scraping")
#extracts all html tags
page %>%
html_elements("*") %>%
html_name() %>%
unique
scraping_wiki <- read_html("https://en.wikipedia.org/wiki/Web_scraping")
scraping_wiki %>%
html_elements("h1")
scraping_wiki <- read_html ("https://en.wikipedia.org/wiki/Web_scraping")
scraping_wiki %>%
html_elements("h1") %>%
html_text()
scraping_wiki %>%
html_elements("h2") %>%
html_text()
p_nodes <- scraping_wiki %>%
html_elements("p")
length (p_nodes)
p_nodes[1:6]
data<-tibble(read.csv("Seasons_Stats_NBA.csv"))
head(data)
function_1 <-function(x){
output <- filter(Players, Year == x,)
}
function_1 <-function(x){
output <- filter(data, Players == max(Age, na.rm=TRUE), Year == x)
}
function_1(1950)
function_1 <-function(x){
output <- filter(data, Player == max(Age, na.rm=TRUE), Year == x)
}
function_2 <- function(x){
for (i in seq_along(data[year])) {
output[i] <- max(df[[i]])
output <- vector("double",max(Age))}
} # print out the max age of the player in a given year.
function_3<-function(x){
for
}
function(1950)
function_1(1950)
filter(data, Player == max(Age, na.rm=TRUE), Year == 1950)
filter(data, Age == max(Age, na.rm=TRUE), Year == 1950)
library("devtools")
library(roxygen2)
library(purrr)
library(tidyverse)
data<-tibble(read.csv("Seasons_Stats_NBA.csv"))
head(data)
filter(data, Age == max(Age, na.rm=TRUE), Year == 1950)
filter(data, Year == 1950)
library(tidyverse)
df <- tibble(
a = rnorm(10),
b = rnorm(10),
c = rnorm(10),
d = rnorm(10)
)
output <- vector("double", length(df)) ##
for (i in seq_along(df)) {
output[[i]] <- mean(df[[i]])
}
output
function_1 <-function(x){
output <- filter(data, Player == max(Age, na.rm=TRUE), Year == x)
output
}
function_1(1950)
sumarize(data, max(Age))
summarize(data, max(Age))
function_1 <-function(x){
select(data, player, Age, year)
filter(data, Player == max(Age, na.rm=TRUE), Year == x)
output
}
select(data, player, Age, year)
filter(data, Player == max(Age, na.rm=TRUE), Year == x)
function_1 <-function(x){
select(data, Player, Age, Year)
filter(data, Player == max(Age, na.rm=TRUE), Year == x)
output
}
function_2 <- function(x){
for (i in seq_along(data[year])) {
output[i] <- max(df[[i]])
output <- vector("double",max(Age))}
} # print out the max age of the player in a given year.
function_3<-function(x){
for
}
select(data, Player, Age, Year)
filter(data, Player == max(Age, na.rm=TRUE), Year == x)
select(data, Player, Age, Year)
filter(data, Player == max(Age, na.rm=TRUE), Year == 1950)
select(data, Player, Age, Year)
filter(data, Age == max(Age, na.rm=TRUE), Year == 1950)
filter(data, Player == max(Age, na.rm=TRUE), Year == x)
filter(data, Player == max(Age, na.rm=TRUE), Year == 1950)
filter(data, Age == max(Age, na.rm=TRUE), Year == 1950)
function_1 <-function(x, y){
#select(data, Player, Age, Year)
filter(x, Player == "Stephen Curry", Year == y)
}
function_1(data, 2015)
function_2 <- function(x,y){
filter(x, Year == y) %>%
arrange(desc(Age))
} # print out the max age of the player in a given year.
functionn_2(data, 2015)
function_2(data, 2015)
filter(data, Year == 2015, Age == max(Age))
max(Age)
max(data$Age)
max(data$Age,na.rm = TRUE)
max(data$Age&na.rm = TRUE)
filter(data, Year == 2015&Age == max(Age))
function_2 <- function(x,y){
filter(x, Year == y) %>%
max(Age, na.rm = TRUE) %>%
} # print out
function_2 <- function(x,y){
filter(x, Year == y) %>%
max(Age, na.rm = TRUE)
} # print out the max age of the player in a given year.
function_2(data, 2015)
function_2 <- function(x,y){
filter(x, Year == y) %>%
max(x$Age, na.rm = TRUE)
} # print out the max age of the player in a given year.
function_2 <- function(x,y){
filter(x, Year == y) %>%
max(x$Age, na.rm = TRUE)
} # print out the max age of the player in a given year.
function_2(data, 2015)
function_2 <- function(x,y){
filter(x, Year == y) %>%
arrange(desc(Age))[1]
}
function_2(data, 2015)
function_2 <- function(x,y){
filter(x, Year == y) %>%
arrange(desc(x$Age))[1]
} # print out the max age of the player in a given year.
function_2(data, 2015)
data<-tibble(read.csv("Seasons_Stats_NBA.csv"))
head(data)
function_2 <- function(x,y){
filter(x, Year == y) %>%
arrange(desc(Age))[1]
} # print out the max age
function_2(data, 2015)
function_2 <- function(x,y){
filter(x, Year == y) %>%
arrange(desc(Age))
}
function_2(data, 2015)
filter(date, Year == 2015) %>%
arrange(desc(Age))[1,]
filter(date, Year == 2015) %>%
arrange(desc(Age))%>%[1,]
function_2 <- function(x,y){
filter(x, Year == y) %>%
arrange(desc(Age)) %>%
[1,]
function_2 <- function(x,y){
filter(x, Year == y) %>%
arrange(desc(Age)) %>%
top_n(1)
} # print out the max age of the player in a given year.
function_2(data, 2015)
filter(x, Year == y) %>%
arrange(desc(Age)) %>%
top_n(-1)
function_2 <- function(x,y){
filter(x, Year == y) %>%
arrange(desc(Age)) %>%
top_n(-1)
} #
function_2(data,2015)
function_2 <- function(x,y){
filter(x, Year == y) %>%
arrange(desc(Age)) %>%
top_n(0)
} # pri
function_2(data, 2015)
function_2 <- function(x,y){
filter(x, Year == y) %>%
arrange(desc(Age)) %>%
top_n(1)
}
function_2(data, 2015)
function_2 <- function(x,y){
filter(x, Year == y) %>%
#arrange(desc(Age)) %>%
slice_max(Age,n = 1)
} #
filter(data)
function_2(data, 2015)
function_2 <- function(x,y){
filter(x, Year == y) %>%
#arrange(desc(Age)) %>%
slice_max(Age,n = 1)%>%
top_n(1)
} # print out the max age of the player in a given year.
function_2(data, 2015)
function_2 <- function(x,y){
filter(x, Year == y) %>%
#arrange(desc(Age)) %>%
slice_max(Age,n = 1)%>%
top_n(0)
} # print out the max age of the player in a given year.
function_2(data, 2015)
function_2 <- function(x,y){
filter(x, Year == y) %>%
#arrange(desc(Age)) %>%
slice_max(Age,n = 1)%>%
top_n(1)
} # prin
function_2(data, 2015)
filter(data, year == 2015) %>%
keep(is.numeric)
filter(data, year == 2015) %>%
keep(,is.numeric)
filter(data, year == 2015) %>% keep(is.numeric)
function_3<-function(x, y){
filter(x, year == y) %>%
keep(x,is.numeric)
}
function_3(data, 2015)
function_3<-function(x, y){
keep(x,is.numeric) %>%
filter(year == y)
}
function_3(data, 2015)
keep(data, is.numeric)
library("devtools")
library(roxygen2)
library(purrr)
library(tidyverse)
keep(data, is.numeric)
keep(data, is.numeric())
library("devtools")
library(roxygen2)
library(purrr)
library(tidyverse)
function_3<-function(x, y){
is.numeric(x) %>%
filter(year == y)
}
function(data, 2015)
function_3(data, 2015)
function_3<-function(x, y){
filter(x, year == y) %>%
select_if(negate(is.numeric))
}
function_3<-function(x, y){
filter(x, year == y) %>%
select_if(is.numeric)
}
function_3(data, 2015)
function_3<-function(x, y){
filter(x, Year == y) %>%
select_if(is.numeric)
}
function_3(data, 2015)
function_3<-function(x, y){
filter(x, Year == y) %>%
select_if(is.numeric) %>%
cor()
}
function_3(data, 2015)
function_3<-function(x, y){
filter(x, Year == y) %>%
select_if(is.numeric) %>%
cor() %>%
ggpairs("Not feeling adventuresome")
} # not feeling adventuresome like...at all
function_3(data, 2015)
library(GGally)
install.packages("GGally")
library(GGally)
function_3(data, 2015)
function_3<-function(x, y){
filter(x, Year == y) %>%
select_if(is.numeric) %>%
#cor() %>%
ggpairs("Not feeling adventuresome")
} # not feeling adventuresome like...at all
function_3(data, 2015)
function_3<-function(x, y){
filter(x, Year == y) %>%
select_if(is.numeric) %>%
#cor() %>%
ggpairs(title = "Not feeling adventuresome")
} # not feeling adventuresome like...at all
function_3(data, 2015)
source("function_1.r")
source("function_1.R")
source("function_1.R")
setwd(".") #Assumes you are currently using R working directory.
#Note that you can always set this using th Session drop down menu in Rstudio as well.
document() #devtools function that creates .Rd files used in help(function_name)
library(devtools)
document() #devtools function that creates .Rd files used in help(function_name)
setwd(".") #Assumes you are currently using R working directory.
#Note that you can always set this using th Session drop down menu in Rstudio as well.
document() #devtools function that creates .Rd files used in help(function_name)
#set the directory same source as the source file
setwd("/Volumes/GoogleDrive/My Drive/QMSS/Spring 2022/GR5072_Modern Data Structure/gr5072-homework-5-DuYanji/src")
document() #devtools function that creates .Rd files used in help(function_name)
setwd(".") #Assumes you are currently using R working directory.
#Note that you can always set this using th Session drop down menu in Rstudio as well.
document() #devtools function that creates .Rd files used in help(function_name)
setwd("/Volumes/GoogleDrive/My Drive/QMSS/Spring 2022/GR5072_Modern Data Structure/gr5072-homework-5-DuYanji/src")
document() #devtools function that creates .Rd files used in help(function_name)
setwd(".") #Assumes you are currently using R working directory.
document() #devtools function that creates .Rd files used in help(function_name)
#set the directory same source as the source file
setwd("/Volumes/GoogleDrive/My Drive/QMSS/Spring 2022/GR5072_Modern Data Structure/gr5072-homework-5-DuYanji/src/function")
setwd("/Volumes/GoogleDrive/My Drive/QMSS/Spring 2022/GR5072_Modern Data Structure/gr5072-homework-5-DuYanji/src/functions")
document() #devtools function that creates .Rd files used in help(function_name)
#set the directory same source as the source file
setwd("/Volumes/GoogleDrive/My Drive/QMSS/Spring 2022/GR5072_Modern Data Structure/gr5072-homework-5-DuYanji/src")
create_package("functions") # create the package
setwd("/Volumes/GoogleDrive/My Drive/QMSS/Spring 2022/GR5072_Modern Data Structure/gr5072-homework-5-DuYanji/src/functions/R") #Assumes you are currently using R working directory.
document() #devtools function that creates .Rd files used in help(function_name)
setwd("..")
install("cats")
install("functions")
library（functions）
library(functions)
?function_1
?function_3
setwd("/Volumes/GoogleDrive/My Drive/QMSS/Spring 2022/GR5072_Modern Data Structure/gr5072-homework-5-DuYanji/src/functions/R") #Assumes you are currently using R working directory.
document() #devtools function that creates .Rd files used in help(function_name)
setwd("/Volumes/GoogleDrive/My Drive/QMSS/Spring 2022/GR5072_Modern Data Structure/gr5072-homework-5-DuYanji/src/functions/R")
#set the directory same source as the source file
setwd("/Volumes/GoogleDrive/My Drive/QMSS/Spring 2022/GR5072_Modern Data Structure/gr5072-homework-5-DuYanji/src")
setwd("/Volumes/GoogleDrive/My Drive/QMSS/Spring 2022/GR5072_Modern Data Structure/gr5072-homework-5-DuYanji/src/functions/R") #Assumes you are currently using R working directory.
document() #devtools function that creates .Rd files used in help(function_name)
setwd("/Volumes/GoogleDrive/My Drive/QMSS/Spring 2022/GR5072_Modern Data Structure/gr5072-homework-5-DuYanji/src/functions/R") #Assumes you are currently using R working directory.
document() #devtools function that creates .Rd files used in help(function_name)
setwd("..")
install("functions")
setwd("..")
install("functions")
setwd("..")
install("functions")
?function_3
dir.create("data/")
setwd("./data")
save(data,"NBA.RData")
save(data,"data.RData")
library(devtools)
library(roxygen2)
library(purrr)
library(tidyverse)
library(GGally)
data<-tibble(read.csv("Seasons_Stats_NBA.csv"))
setwd("/Volumes/GoogleDrive/My Drive/QMSS/Spring 2022/GR5072_Modern Data Structure/gr5072-homework-5-DuYanji/src")
data<-tibble(read.csv("Seasons_Stats_NBA.csv"))
data<-tibble(read.csv("Seasons_Stats_NBA.csv"))
head(data)
function_1 <-function(x, y){
filter(x, Player == "Stephen Curry", Year == y)
}
source("function_1.R") #verify the function is saved in a separated r script.
#set the directory same source as the source file
setwd("/Volumes/GoogleDrive/My Drive/QMSS/Spring 2022/GR5072_Modern Data Structure/gr5072-homework-5-DuYanji/src")
create_package("functions") # create the package
setwd("/Volumes/GoogleDrive/My Drive/QMSS/Spring 2022/GR5072_Modern Data Structure/gr5072-homework-5-DuYanji/src/functions/R") #Assumes you are currently using R working directory.
# Save the full nba data object to the data/ folder.
dir.create("data/")
setwd("./data")
save(data,"data.RData")
data
save(data,"data.RData")
usethis::use_data(data)
# Save the full nba data object to the data/ folder.
dir.create("data/")
setwd("./data")
save(data, "data.RData")
# Save the full nba data object to the data/ folder.
setwd("/Volumes/GoogleDrive/My Drive/QMSS/Spring 2022/GR5072_Modern Data Structure/gr5072-homework-5-DuYanji/src/functions")
dir.create("data/")
setwd("./data")
save(data, "data.RData")
save(data, "data.RData")
?save
usethis::use_data(data)
setwd("./data")
setwd("/Volumes/GoogleDrive/My Drive/QMSS/Spring 2022/GR5072_Modern Data Structure/gr5072-homework-5-DuYanji/src/functions")
# Save the full nba data object to the data/ folder.
setwd("/Volumes/GoogleDrive/My Drive/QMSS/Spring 2022/GR5072_Modern Data Structure/gr5072-homework-5-DuYanji/src/functions")
dir.create("data/")
setwd("./data")
save(data, "data.RData")
# Save the full nba data object to the data/ folder.
setwd("/Volumes/GoogleDrive/My Drive/QMSS/Spring 2022/GR5072_Modern Data Structure/gr5072-homework-5-DuYanji/src/functions")
dir.create("data/")
setwd("./data")
# save(data, "data.RData")
usethis::use_data(data)
setwd("/Volumes/GoogleDrive/My Drive/QMSS/Spring 2022/GR5072_Modern Data Structure/gr5072-homework-5-DuYanji/src/functions")
usethis::use_data(data)
usethis::use_data("data")
